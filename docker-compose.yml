services:

  web:
    container_name: aryu_blog
    build:
      context: .
      dockerfile: .Dockerfile
      args:
        DEBUG: ${DEBUG}
    volumes:
      - media:/app/media 
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - BASIC_AUTH=${BASIC_AUTH}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - LANGUAGE_CODE=${LANGUAGE_CODE}
      - TIME_ZONE=${TIME_ZONE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    command: |
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      - database
      - redis

  database:
    container_name: postgresql_database
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  media:
  postgres_data:
  redis_data:
